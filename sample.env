# Services for which this should be active. Each service will be parsed from this variable.
## Streaming will start around specified times. Source stream must be available and destination
## endpoint must be ready to accept streamed content.
## Format is: DOW|HR:MIN|DUR,DOW|HR|MIN|DUR...
## DOW = One digit day of week (Monday is day 1)
## HR = Two digit hour (24 hour clock)
## MIN = Two digit minute
## DUR = Service duration (minutes)
### Duration note: during this time, ffmpeg will be restarted if it stops.
### So, you may want to set this a little shorter than the duration
### during which your source content will be available.
SERVICE_TIMES=6|18:00|88,7|09:00|88,7|10:45|88,7|18:00|88

# Input URL (DASH or HLS should work)
INPUT_URL=https://example.com/Manifest.mpd

# FFMPEG Params
## We'll prefix this with "ffmpeg -progress - -nostats -hide_banner -re -i - "
## You need to supply everything else to get your media wherever it needs to go.
FFMPEG_PARAMS=-vn -c:a pcm_s16le -ab 128k -ac 1 -ar 44100 -f flv rtmp://example.com:1935/app/live

# Buffer: Start playing the stream this many minutes before scheduled service time (minutes)
SERVICE_BUFFER=2

# Your local timezone, in PYTZ format
## You can get a list of possible timezones here: 
## https://en.wikipedia.org/wiki/List_of_tz_database_time_zones
## Use the timezone name in the "TZ database name" column
PYTZ_TIMEZONE=America/New_York

# Sleep time (seconds). How long do we pause between state checks?
SLEEP_TIME=15

# Path to log config (relative to app directory in container)
LOG_CONFIG=./logging.yml

# Debug mode parameters; force time of day, control error alerting
DEBUG=false
DEBUG_DATETIME=2020-01-04 18:00:00
DEBUG_TZ_OFFSET=5
